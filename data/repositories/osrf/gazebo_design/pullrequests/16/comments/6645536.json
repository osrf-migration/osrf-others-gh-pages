{"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/16/comments/6645536.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_design/diff/osrf/gazebo_design:None..None?path=physics_params%2Fphysics_params.md"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/16/_/diff#comment-6645536"}}, "parent": {"id": 6642818, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/16/comments/6642818.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/16/_/diff#comment-6642818"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/16.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/16"}}, "title": "Generic physics parameters in Gazebo and SDF"}, "content": {"raw": "I think the best practice is:\n\n```\ntemplate<typename T> bool ConvertParam(const msgs::Param &_msg, T _value);\n\n// Call \"bool ConvertParam(...)\" and throw an exception if returns false\ntemplate<typename T> msgs::Param ConvertParam(const std::String &_key, const T &_value);\n```\n\nand the same pairs of functions for `ConvertParamSDF`.\n\nThis allows for a more convenient accessor function that still alerts the user in case of errors. If we like this idea, we could consider adding a similar scheme for `G/SetParam` in the physics engines and `Joint` functions.", "markup": "markdown", "html": "<p>I think the best practice is:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">template</span><span class=\"o\">&lt;</span><span class=\"nt\">typename</span> <span class=\"nt\">T</span><span class=\"o\">&gt;</span> <span class=\"nt\">bool</span> <span class=\"nt\">ConvertParam</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Param</span> <span class=\"o\">&amp;</span><span class=\"nt\">_msg</span><span class=\"o\">,</span> <span class=\"nt\">T</span> <span class=\"nt\">_value</span><span class=\"o\">);</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Call</span> <span class=\"s2\">&quot;bool ConvertParam(...)&quot;</span> <span class=\"nt\">and</span> <span class=\"nt\">throw</span> <span class=\"nt\">an</span> <span class=\"nt\">exception</span> <span class=\"nt\">if</span> <span class=\"nt\">returns</span> <span class=\"nt\">false</span>\n<span class=\"nt\">template</span><span class=\"o\">&lt;</span><span class=\"nt\">typename</span> <span class=\"nt\">T</span><span class=\"o\">&gt;</span> <span class=\"nt\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Param</span> <span class=\"nt\">ConvertParam</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">String</span> <span class=\"o\">&amp;</span><span class=\"nt\">_key</span><span class=\"o\">,</span> <span class=\"nt\">const</span> <span class=\"nt\">T</span> <span class=\"o\">&amp;</span><span class=\"nt\">_value</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>and the same pairs of functions for <code>ConvertParamSDF</code>.</p>\n<p>This allows for a more convenient accessor function that still alerts the user in case of errors. If we like this idea, we could consider adding a similar scheme for <code>G/SetParam</code> in the physics engines and <code>Joint</code> functions.</p>", "type": "rendered"}, "created_on": "2015-05-04T21:16:15.902617+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {"to": null, "from": null, "outdated": false, "path": "physics_params/physics_params.md"}, "updated_on": "2015-05-04T21:16:52.371931+00:00", "type": "pullrequest_comment", "id": 6645536}