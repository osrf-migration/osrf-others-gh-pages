{"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/20/comments/7951300.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_design/diff/mkaspr/gazebo_design:5107b996a747..cbceec0723d4?path=render_engine%2Frendering_uml4.png"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/20/_/diff#comment-7951300"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/20.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/20"}}, "title": "Abstracting Render-engine Interface in Gazebo"}, "content": {"raw": "Could you elaborate a bit more on this structure? \n\nIf I understand well (and I probably don't), what we currently have as `Visual` performs the function of both `Node` and `Visual`. That is, it might be just a visualization of something, like a box, or it might behave as a container for other visuals and not have a visual representation (geometry / material) of its own. Could you go into a bit more detail on how you intend to split the existing functionality?\n\nOne thing that might be tedious but perhaps will save us time in the future is to list all classes that will be created and their relationships. For example, there will be a `Model` class which inherits from `Node`, right? How about all the visuals which get attached to a link, such as the \"visual visuals\", collision visuals, CoM, inertia, joints... Will these inherit from `Node` or from `Visual`? How will they be structured?\n\nWill a `Visual` have a single geometry or can it contain a lot of smaller geometries which are assembled together? For example, you mention that \"axis-arrows are cones and cylinders of a certain color and proportion, no matter the underlying render-engine\", I imagine this being a reference to the current [ArrowVisual](http://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo_1_1rendering_1_1ArrowVisual.html) class. Would a class like `ArrowVisual` inherit from `Node` and have two visuals, one for the cone and one for the cylinder, or would it inherit from `Visual` and have two geometries and their respective materials?\n\nIt might be interesting to trace a parallel with the [physics::Base](http://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo_1_1physics_1_1Base.html) class and how it abstracts some functionality (or maybe it's not a good parallel...).\n\nAnother thing that this reminded me of is the structure of `three.js`, the library we use on [GzWeb](https://bitbucket.org/osrf/gzweb). They have the [Object3D](http://threejs.org/docs/#Reference/Core/Object3D) class, which is the base for everything, from [Camera](http://threejs.org/docs/#Reference/Cameras/Camera) to [Mesh](http://threejs.org/docs/#Reference/Objects/Mesh) and [Light](http://threejs.org/docs/#Reference/Lights/AmbientLight).", "markup": "markdown", "html": "<p>Could you elaborate a bit more on this structure? </p>\n<p>If I understand well (and I probably don't), what we currently have as <code>Visual</code> performs the function of both <code>Node</code> and <code>Visual</code>. That is, it might be just a visualization of something, like a box, or it might behave as a container for other visuals and not have a visual representation (geometry / material) of its own. Could you go into a bit more detail on how you intend to split the existing functionality?</p>\n<p>One thing that might be tedious but perhaps will save us time in the future is to list all classes that will be created and their relationships. For example, there will be a <code>Model</code> class which inherits from <code>Node</code>, right? How about all the visuals which get attached to a link, such as the \"visual visuals\", collision visuals, CoM, inertia, joints... Will these inherit from <code>Node</code> or from <code>Visual</code>? How will they be structured?</p>\n<p>Will a <code>Visual</code> have a single geometry or can it contain a lot of smaller geometries which are assembled together? For example, you mention that \"axis-arrows are cones and cylinders of a certain color and proportion, no matter the underlying render-engine\", I imagine this being a reference to the current <a data-is-external-link=\"true\" href=\"http://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo_1_1rendering_1_1ArrowVisual.html\" rel=\"nofollow\">ArrowVisual</a> class. Would a class like <code>ArrowVisual</code> inherit from <code>Node</code> and have two visuals, one for the cone and one for the cylinder, or would it inherit from <code>Visual</code> and have two geometries and their respective materials?</p>\n<p>It might be interesting to trace a parallel with the <a data-is-external-link=\"true\" href=\"http://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo_1_1physics_1_1Base.html\" rel=\"nofollow\">physics::Base</a> class and how it abstracts some functionality (or maybe it's not a good parallel...).</p>\n<p>Another thing that this reminded me of is the structure of <code>three.js</code>, the library we use on <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gzweb\" rel=\"nofollow\">GzWeb</a>. They have the <a data-is-external-link=\"true\" href=\"http://threejs.org/docs/#Reference/Core/Object3D\" rel=\"nofollow\">Object3D</a> class, which is the base for everything, from <a data-is-external-link=\"true\" href=\"http://threejs.org/docs/#Reference/Cameras/Camera\" rel=\"nofollow\">Camera</a> to <a data-is-external-link=\"true\" href=\"http://threejs.org/docs/#Reference/Objects/Mesh\" rel=\"nofollow\">Mesh</a> and <a data-is-external-link=\"true\" href=\"http://threejs.org/docs/#Reference/Lights/AmbientLight\" rel=\"nofollow\">Light</a>.</p>", "type": "rendered"}, "created_on": "2015-07-01T19:35:13.840688+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": null, "outdated": true, "path": "render_engine/rendering_uml4.png"}, "updated_on": "2015-07-01T19:41:07.142758+00:00", "type": "pullrequest_comment", "id": 7951300}