{"pagelen": 50, "values": [{"update": {"description": "Link to see it better:\r\n\r\n#!/osrf/gazebo_design/src/undo_2.0/undo/undo.md", "title": "Undo", "destination": {"commit": {"hash": "fc465899e48b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_design/commit/fc465899e48b.json"}, "html": {"href": "#!/osrf/gazebo_design/commits/fc465899e48b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design.json"}, "html": {"href": "#!/osrf/gazebo_design"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d7bf1c81-183c-42cc-8760-b207a9a49991}ts=markdown"}}, "type": "repository", "name": "gazebo_design", "full_name": "osrf/gazebo_design", "uuid": "{d7bf1c81-183c-42cc-8760-b207a9a49991}"}, "branch": {"name": "default"}}, "reason": "Will be changed to a keyframe saving approach\r\n\r\n*undoing*", "source": {"commit": {"hash": "96b001bd1ba0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_design/commit/96b001bd1ba0.json"}, "html": {"href": "#!/osrf/gazebo_design/commits/96b001bd1ba0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design.json"}, "html": {"href": "#!/osrf/gazebo_design"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d7bf1c81-183c-42cc-8760-b207a9a49991}ts=markdown"}}, "type": "repository", "name": "gazebo_design", "full_name": "osrf/gazebo_design", "uuid": "{d7bf1c81-183c-42cc-8760-b207a9a49991}"}, "branch": {"name": "undo_2.0"}}, "state": "DECLINED", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2015-08-31T20:42:59.151595+00:00"}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9456126.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9456126"}}, "parent": {"id": 9447198, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9447198.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9447198"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}, "content": {"raw": "Some new thoughts I've had in the last hours:\n\n* Keyframe jumping is a very powerful feature, if we will do it for undo, we should make short term plans for introducing a full set of features to allow users to set keyframes and jump to them. This is related to my speculative point that people will want the feature if they see it happening for undo.\n\n* I still don't see why we wouldn't move back time together with physical configuration. If we move back in time, we could send an event which plugins can listen to and change their state accordingly, if they wish. \n\n* Related to performance, besides saving keyframes, we should take into account all the extra server-client communication, especially if we want the server to send feedback back to the client about which commands are still in the undo list to have a dropdown menu for the client, whether the undo and redo buttons are enabled or not and so on. There will be a lot of message passing back and forth. As a reference, take a look at the lag there is while doing basic manipulation in a simple scene on my laptop. The blinking between the old pose and the new pose happens because of the time between messages being sent and received back:\n\n     https://www.youtube.com/watch?v=lg09Sdk6Lc0", "markup": "markdown", "html": "<p>Some new thoughts I've had in the last hours:</p>\n<ul>\n<li>\n<p>Keyframe jumping is a very powerful feature, if we will do it for undo, we should make short term plans for introducing a full set of features to allow users to set keyframes and jump to them. This is related to my speculative point that people will want the feature if they see it happening for undo.</p>\n</li>\n<li>\n<p>I still don't see why we wouldn't move back time together with physical configuration. If we move back in time, we could send an event which plugins can listen to and change their state accordingly, if they wish. </p>\n</li>\n<li>\n<p>Related to performance, besides saving keyframes, we should take into account all the extra server-client communication, especially if we want the server to send feedback back to the client about which commands are still in the undo list to have a dropdown menu for the client, whether the undo and redo buttons are enabled or not and so on. There will be a lot of message passing back and forth. As a reference, take a look at the lag there is while doing basic manipulation in a simple scene on my laptop. The blinking between the old pose and the new pose happens because of the time between messages being sent and received back:</p>\n<p><a href=\"https://www.youtube.com/watch?v=lg09Sdk6Lc0\" rel=\"nofollow\" class=\"ap-connect-link\">https://www.youtube.com/watch?v=lg09Sdk6Lc0</a></p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2015-08-28T00:54:28.186864+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2015-08-28T17:31:13.684087+00:00", "type": "pullrequest_comment", "id": 9456126}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"update": {"description": "Link to see it better:\r\n\r\n#!/osrf/gazebo_design/src/undo_2.0/undo/undo.md", "title": "Undo", "destination": {"commit": {"hash": "bec79c3cc691", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_design/commit/bec79c3cc691.json"}, "html": {"href": "#!/osrf/gazebo_design/commits/bec79c3cc691"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design.json"}, "html": {"href": "#!/osrf/gazebo_design"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d7bf1c81-183c-42cc-8760-b207a9a49991}ts=markdown"}}, "type": "repository", "name": "gazebo_design", "full_name": "osrf/gazebo_design", "uuid": "{d7bf1c81-183c-42cc-8760-b207a9a49991}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "96b001bd1ba0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_design/commit/96b001bd1ba0.json"}, "html": {"href": "#!/osrf/gazebo_design/commits/96b001bd1ba0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design.json"}, "html": {"href": "#!/osrf/gazebo_design"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d7bf1c81-183c-42cc-8760-b207a9a49991}ts=markdown"}}, "type": "repository", "name": "gazebo_design", "full_name": "osrf/gazebo_design", "uuid": "{d7bf1c81-183c-42cc-8760-b207a9a49991}"}, "branch": {"name": "undo_2.0"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2015-08-27T23:55:34.560916+00:00"}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9454274.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9454274"}}, "parent": {"id": 9447198, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9447198.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9447198"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}, "content": {"raw": "Some of my thoughts:\n\n* undo should be inverse of redo! yes - if we undo time then we should redo time \n\n* Simulation is running: I have no data to back this up but I still think having auto keyframe saving feature would have a performance hit. We don't know what machines the users have or how complex their scene is so it's hard to say its a corner case or not. We could have a checkbox that explicitly indicates whether `undo` will make keyframes or not, and they are given the option to turn it off. When turned off, undo will be a client-side action.\n\n* When simulation is paused, I don't think we need to rewind back to previous keyframe, a client side undo may be sufficient. \n\nSo.. we may need both options: client-side and keyframe-based undo. Sorry to add more work. I guess it's just a matter of which one should we support first.", "markup": "markdown", "html": "<p>Some of my thoughts:</p>\n<ul>\n<li>\n<p>undo should be inverse of redo! yes - if we undo time then we should redo time </p>\n</li>\n<li>\n<p>Simulation is running: I have no data to back this up but I still think having auto keyframe saving feature would have a performance hit. We don't know what machines the users have or how complex their scene is so it's hard to say its a corner case or not. We could have a checkbox that explicitly indicates whether <code>undo</code> will make keyframes or not, and they are given the option to turn it off. When turned off, undo will be a client-side action.</p>\n</li>\n<li>\n<p>When simulation is paused, I don't think we need to rewind back to previous keyframe, a client side undo may be sufficient. </p>\n</li>\n</ul>\n<p>So.. we may need both options: client-side and keyframe-based undo. Sorry to add more work. I guess it's just a matter of which one should we support first.</p>", "type": "rendered"}, "created_on": "2015-08-27T22:31:44.113196+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {}, "updated_on": "2015-08-27T22:31:44.126350+00:00", "type": "pullrequest_comment", "id": 9454274}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9447886.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9447886"}}, "parent": {"id": 9447542, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9447542.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9447542"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}, "content": {"raw": "I'll read the first version soon. I have to spend the afternoon at SRI though.\n\nIt might be worthwhile to layout a set of typical scenarios, like you did with the polaris. Such as: \n\n1. A user is creating a world and simulation is paused while they use undo.\n2. A user is creating a world with dynamic objects, and they switch between play and pause to get everything setup correctly.\n3. A user has a running simulation that they wan to manipulate in some way.\n\nIt might be the case that option 1 doesn't provide the necessary flexibility. If this is the case, then option 2 and keyframing would be a better option.", "markup": "markdown", "html": "<p>I'll read the first version soon. I have to spend the afternoon at SRI though.</p>\n<p>It might be worthwhile to layout a set of typical scenarios, like you did with the polaris. Such as: </p>\n<ol>\n<li>A user is creating a world and simulation is paused while they use undo.</li>\n<li>A user is creating a world with dynamic objects, and they switch between play and pause to get everything setup correctly.</li>\n<li>A user has a running simulation that they wan to manipulate in some way.</li>\n</ol>\n<p>It might be the case that option 1 doesn't provide the necessary flexibility. If this is the case, then option 2 and keyframing would be a better option.</p>", "type": "rendered"}, "created_on": "2015-08-27T18:25:56.390570+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2015-08-27T18:25:56.407456+00:00", "type": "pullrequest_comment", "id": 9447886}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9447542.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9447542"}}, "parent": {"id": 9447198, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9447198.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9447198"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}, "content": {"raw": "I probably need to think more about this then. Did you take a look at the first [version](#!/osrf/gazebo_design/src/undo/undo/undo.md) of the proposal which had the keyframes idea?\n\nJust as a reference, I played a bit with Webots and their undo works similarly to this proposal.", "markup": "markdown", "html": "<p>I probably need to think more about this then. Did you take a look at the first <a data-is-external-link=\"true\" href=\"#!/osrf/gazebo_design/src/undo/undo/undo.md\" rel=\"nofollow\">version</a> of the proposal which had the keyframes idea?</p>\n<p>Just as a reference, I played a bit with Webots and their undo works similarly to this proposal.</p>", "type": "rendered"}, "created_on": "2015-08-27T18:15:48.178524+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2015-08-27T18:15:48.193056+00:00", "type": "pullrequest_comment", "id": 9447542}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9447198.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9447198"}}, "parent": {"id": 9446560, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9446560.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9446560"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}, "content": {"raw": "I don't think we are mixing two sets of features. Simulation is different from almost every other application that implements undo. We have to divorce the typical \"undo\" concept, and apply the correct \"ctrl-z\" to simulation. I'm of the opinion that going back in time is the correct application of \"ctrl-z\" to simulation.\n\nBullet point one seems to be speculation, and I'm not convinced it is accurate.\n\nBullet point two I don't agree with. I would find option 1 more intuitive than option 2. \n\nBullet point three I also don't agree with, unless you have data to back up the performance issue claim. We could imagine scenarios where the scene is immensely complex, and saving state might take more memory/time than normal. However, this is a corner case and one that we can address by only saving the state delta.\n\nBullet point four I agree with. Redo would jump forward in time. This would be consistent with undo, and would have the expected behavior.\n\nI think the word \"undo\" and our previous notions of how undo has work in other applications is clouding the correct implementation for simulation.\n\nMy biggest problem with option 2 is it's ability to end up in an unstable and unwanted state. We should prevent this at all cost.", "markup": "markdown", "html": "<p>I don't think we are mixing two sets of features. Simulation is different from almost every other application that implements undo. We have to divorce the typical \"undo\" concept, and apply the correct \"ctrl-z\" to simulation. I'm of the opinion that going back in time is the correct application of \"ctrl-z\" to simulation.</p>\n<p>Bullet point one seems to be speculation, and I'm not convinced it is accurate.</p>\n<p>Bullet point two I don't agree with. I would find option 1 more intuitive than option 2. </p>\n<p>Bullet point three I also don't agree with, unless you have data to back up the performance issue claim. We could imagine scenarios where the scene is immensely complex, and saving state might take more memory/time than normal. However, this is a corner case and one that we can address by only saving the state delta.</p>\n<p>Bullet point four I agree with. Redo would jump forward in time. This would be consistent with undo, and would have the expected behavior.</p>\n<p>I think the word \"undo\" and our previous notions of how undo has work in other applications is clouding the correct implementation for simulation.</p>\n<p>My biggest problem with option 2 is it's ability to end up in an unstable and unwanted state. We should prevent this at all cost.</p>", "type": "rendered"}, "created_on": "2015-08-27T18:04:26.376113+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2015-08-27T18:04:26.385311+00:00", "type": "pullrequest_comment", "id": 9447198}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9446560.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9446560"}}, "parent": {"id": 9444164, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9444164.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9444164"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}, "content": {"raw": "Yes, I see what you're saying. But still, I feel like we're trying to mix up two sets of features here. \n\nOne thing is to undo the user's command, another thing is to go back to a known good state or rewind the simulation. Going back in time would indeed be very very useful, but I feel like it should be its own feature.\n\n* If we introduce an undo which goes back in time, people might wish they could go back in time, but they can't because they didn't edit the scene and don't have saved keyframes, which might be frustrating and even confusing. Then people would start to make tricks to save keyframes, like editing the scene slightly to have a point to go back to. \n\n* It can be counter intuitive for the scene to go back to a previous state but the time doesn't go back.\n\n* Saving keyframes at every single user command will bring big performance issues.\n\n* If undo goes to a previous keyframe, I feel like redo must do the same and also skip forward to the keyframe when undo was triggered. Otherwise you can't \"undo the undo\". Imagine a user moved something and then after 10 mins of simulation they hit Ctrl+Z by mistake. The whole thing gets rewinded and unless redo jumps all the way forward, you lost all those 10 mins. \n\n    This anecdote brings the conclusion that **undo and redo really should be the inverse of each other**. So let's say redo also jumps to a future keyframe. If we have undo and redo just jumping from a keyframe to another without any concept of what the user command was, I think we're trying to implement a keyframe jumping feature, not really undo anymore. \n    \n    The proposal in this design is an attempt of keeping undo and redo the inverse of each other at least locally. \n\nBack at your original anecdote, I really understand your concern and I don't have a good solution for it. I feel like if it was me editing a highly dynamic world where things might move around, I would pause the simulation first. With the simulation paused, the local undo proposed here works fine. But we can't expect users to always do that. \n\nAnother thing which I've been thinking about is having a simulation play mode separate from a simulation edit mode. This way we force users to manipulate the scene in a paused state.\n\n", "markup": "markdown", "html": "<p>Yes, I see what you're saying. But still, I feel like we're trying to mix up two sets of features here. </p>\n<p>One thing is to undo the user's command, another thing is to go back to a known good state or rewind the simulation. Going back in time would indeed be very very useful, but I feel like it should be its own feature.</p>\n<ul>\n<li>\n<p>If we introduce an undo which goes back in time, people might wish they could go back in time, but they can't because they didn't edit the scene and don't have saved keyframes, which might be frustrating and even confusing. Then people would start to make tricks to save keyframes, like editing the scene slightly to have a point to go back to. </p>\n</li>\n<li>\n<p>It can be counter intuitive for the scene to go back to a previous state but the time doesn't go back.</p>\n</li>\n<li>\n<p>Saving keyframes at every single user command will bring big performance issues.</p>\n</li>\n<li>\n<p>If undo goes to a previous keyframe, I feel like redo must do the same and also skip forward to the keyframe when undo was triggered. Otherwise you can't \"undo the undo\". Imagine a user moved something and then after 10 mins of simulation they hit Ctrl+Z by mistake. The whole thing gets rewinded and unless redo jumps all the way forward, you lost all those 10 mins. </p>\n<p>This anecdote brings the conclusion that <strong>undo and redo really should be the inverse of each other</strong>. So let's say redo also jumps to a future keyframe. If we have undo and redo just jumping from a keyframe to another without any concept of what the user command was, I think we're trying to implement a keyframe jumping feature, not really undo anymore. </p>\n<p>The proposal in this design is an attempt of keeping undo and redo the inverse of each other at least locally. </p>\n</li>\n</ul>\n<p>Back at your original anecdote, I really understand your concern and I don't have a good solution for it. I feel like if it was me editing a highly dynamic world where things might move around, I would pause the simulation first. With the simulation paused, the local undo proposed here works fine. But we can't expect users to always do that. </p>\n<p>Another thing which I've been thinking about is having a simulation play mode separate from a simulation edit mode. This way we force users to manipulate the scene in a paused state.</p>", "type": "rendered"}, "created_on": "2015-08-27T17:44:06.184039+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2015-08-27T17:44:06.192010+00:00", "type": "pullrequest_comment", "id": 9446560}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9444233.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9444233"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}, "content": {"raw": "Supporting multiple clients is a corner case, and one that can handled with good documentation and GUI elements that are informative to the user. Option 1 and Option 2 both have issues when multiple clients have access to simulation, and I don't think a strong argument can be made for either in this case.", "markup": "markdown", "html": "<p>Supporting multiple clients is a corner case, and one that can handled with good documentation and GUI elements that are informative to the user. Option 1 and Option 2 both have issues when multiple clients have access to simulation, and I don't think a strong argument can be made for either in this case.</p>", "type": "rendered"}, "created_on": "2015-08-27T16:31:23.666178+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2015-08-27T16:31:23.680581+00:00", "type": "pullrequest_comment", "id": 9444233}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9444164.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9444164"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}, "content": {"raw": "I don't think this is correct. Manipulating part of simulation state is unpredictable, whereas going back to a known previous state is highly predictable. Let's imagine you move the polaris, and it starts driving forward. I ball then rolls into the polaris's old location. If undo is pressed, the polaris will spawn into the same space as the ball. Such an instability won't happen if we always go back to a known \"good\" state.", "markup": "markdown", "html": "<p>I don't think this is correct. Manipulating part of simulation state is unpredictable, whereas going back to a known previous state is highly predictable. Let's imagine you move the polaris, and it starts driving forward. I ball then rolls into the polaris's old location. If undo is pressed, the polaris will spawn into the same space as the ball. Such an instability won't happen if we always go back to a known \"good\" state.</p>", "type": "rendered"}, "created_on": "2015-08-27T16:29:23.695236+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2015-08-27T16:29:23.707773+00:00", "type": "pullrequest_comment", "id": 9444164}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24/comments/9444078.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24/_/diff#comment-9444078"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}, "content": {"raw": "Option 1 seems to be the better choice. Going back in time to the last user interaction is more clear than reversing the last command, and will also result in a more stable simulation experience. This is also the behavior that most people would want from undo. The flow of simulation time will be consistent with the state of simulation, and will match other features like log playback. Jumping back will also be consistent with keyframes, when that capability is added. ", "markup": "markdown", "html": "<p>Option 1 seems to be the better choice. Going back in time to the last user interaction is more clear than reversing the last command, and will also result in a more stable simulation experience. This is also the behavior that most people would want from undo. The flow of simulation time will be consistent with the state of simulation, and will match other features like log playback. Jumping back will also be consistent with keyframes, when that capability is added. </p>", "type": "rendered"}, "created_on": "2015-08-27T16:26:33.094402+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2015-08-27T16:26:33.100575+00:00", "type": "pullrequest_comment", "id": 9444078}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"update": {"description": "Link to see it better:\r\n\r\n#!/osrf/gazebo_design/src/undo_2.0/undo/undo.md", "title": "Undo_2.0", "destination": {"commit": {"hash": "bec79c3cc691", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_design/commit/bec79c3cc691.json"}, "html": {"href": "#!/osrf/gazebo_design/commits/bec79c3cc691"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design.json"}, "html": {"href": "#!/osrf/gazebo_design"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d7bf1c81-183c-42cc-8760-b207a9a49991}ts=markdown"}}, "type": "repository", "name": "gazebo_design", "full_name": "osrf/gazebo_design", "uuid": "{d7bf1c81-183c-42cc-8760-b207a9a49991}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "96b001bd1ba0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_design/commit/96b001bd1ba0.json"}, "html": {"href": "#!/osrf/gazebo_design/commits/96b001bd1ba0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design.json"}, "html": {"href": "#!/osrf/gazebo_design"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d7bf1c81-183c-42cc-8760-b207a9a49991}ts=markdown"}}, "type": "repository", "name": "gazebo_design", "full_name": "osrf/gazebo_design", "uuid": "{d7bf1c81-183c-42cc-8760-b207a9a49991}"}, "branch": {"name": "undo_2.0"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2015-08-27T01:26:27.788376+00:00"}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}, {"update": {"description": "Link to see it better:\r\n\r\n#!/osrf/gazebo_design/src/undo_2.0/undo/undo.md", "title": "Undo_2.0", "destination": {"commit": {"hash": "bec79c3cc691", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_design/commit/bec79c3cc691.json"}, "html": {"href": "#!/osrf/gazebo_design/commits/bec79c3cc691"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design.json"}, "html": {"href": "#!/osrf/gazebo_design"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d7bf1c81-183c-42cc-8760-b207a9a49991}ts=markdown"}}, "type": "repository", "name": "gazebo_design", "full_name": "osrf/gazebo_design", "uuid": "{d7bf1c81-183c-42cc-8760-b207a9a49991}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "96b001bd1ba0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gazebo_design/commit/96b001bd1ba0.json"}, "html": {"href": "#!/osrf/gazebo_design/commits/96b001bd1ba0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gazebo_design.json"}, "html": {"href": "#!/osrf/gazebo_design"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d7bf1c81-183c-42cc-8760-b207a9a49991}ts=markdown"}}, "type": "repository", "name": "gazebo_design", "full_name": "osrf/gazebo_design", "uuid": "{d7bf1c81-183c-42cc-8760-b207a9a49991}"}, "branch": {"name": "undo_2.0"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2015-08-27T01:26:27.756221+00:00"}, "pull_request": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/24.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/24"}}, "title": "Undo"}}]}