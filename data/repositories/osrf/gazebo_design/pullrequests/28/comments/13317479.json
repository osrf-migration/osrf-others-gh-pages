{"links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/28/comments/13317479.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebo_design/diff/osrf/gazebo_design:None..None?path=inertia_resize%2Finertia_resize.md"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/28/_/diff#comment-13317479"}}, "parent": {"id": 13308136, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/28/comments/13308136.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/28/_/diff#comment-13308136"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 28, "links": {"self": {"href": "data/repositories/osrf/gazebo_design/pullrequests/28.json"}, "html": {"href": "#!/osrf/gazebo_design/pull-requests/28"}}, "title": "Move physics::Inertial to ignition math, add MassMatrix3 subclass"}, "content": {"raw": "We can add helper functions for other shapes I think.\n\nCurrently I have written the following helper functions that are blocked by another pull request review:\n\n* [EquivalentBox(Vector3 &_size, Quaternion &_rot) const](https://bitbucket.org/ignitionrobotics/ign-math/branches/compare/mass_matrix%0Dign-math2#Linclude/ignition/math/MassMatrix3.hhT658) gets the dimensions and orientation of the inertia as an equivalent box\n* [SetFromBox(const Vector3 &_size, Quaternion &_rot)](https://bitbucket.org/ignitionrobotics/ign-math/branches/compare/mass_matrix%0Dign-math2#Linclude/ignition/math/MassMatrix3.hhT717) sets the inertia based on dimensions and orientation of an equivalent box\n\nWe could easily add `SetFrom` functions for sphere and cylinder, though the getter functions would have to check for sufficient symmetry to be a cylinder or sphere.", "markup": "markdown", "html": "<p>We can add helper functions for other shapes I think.</p>\n<p>Currently I have written the following helper functions that are blocked by another pull request review:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-math/branches/compare/mass_matrix%0Dign-math2#Linclude/ignition/math/MassMatrix3.hhT658\" rel=\"nofollow\">EquivalentBox(Vector3 &amp;_size, Quaternion &amp;_rot) const</a> gets the dimensions and orientation of the inertia as an equivalent box</li>\n<li><a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-math/branches/compare/mass_matrix%0Dign-math2#Linclude/ignition/math/MassMatrix3.hhT717\" rel=\"nofollow\">SetFromBox(const Vector3 &amp;_size, Quaternion &amp;_rot)</a> sets the inertia based on dimensions and orientation of an equivalent box</li>\n</ul>\n<p>We could easily add <code>SetFrom</code> functions for sphere and cylinder, though the getter functions would have to check for sufficient symmetry to be a cylinder or sphere.</p>", "type": "rendered"}, "created_on": "2016-01-09T01:58:38.969632+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "outdated": false, "path": "inertia_resize/inertia_resize.md"}, "updated_on": "2016-01-09T01:58:38.972265+00:00", "type": "pullrequest_comment", "id": 13317479}