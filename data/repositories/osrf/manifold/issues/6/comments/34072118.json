{"links": {"self": {"href": "data/repositories/osrf/manifold/issues/6/comments/34072118.json"}, "html": {"href": "#!/osrf/manifold/issues/6#comment-34072118"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/manifold/issues/6.json"}}, "type": "issue", "id": 6, "repository": {"links": {"self": {"href": "data/repositories/osrf/manifold.json"}, "html": {"href": "#!/osrf/manifold"}, "avatar": {"href": "data/bytebucket.org/ravatar/{95277805-c4cc-45bf-b4bb-ad6091e930a7}ts=c_plus_plus"}}, "type": "repository", "name": "manifold", "full_name": "osrf/manifold", "uuid": "{95277805-c4cc-45bf-b4bb-ad6091e930a7}"}, "title": "Evaluate integration of waypoints and lanes to the graph"}, "content": {"raw": "@caguero I think that it will be pretty handy to have a pointer to the Waypoint in the manifold::rndf::RoadNode class. For example, if I want to search for a waypoint I will do something like:\n\n\n```\n#!c++\n\nstd::string strId = \"1.2.3\";\nmanifold::RNDFNode *node = rndfInfo->Info(strId);\nif (node == nullptr) {\n  // The waypoint does not exist.\n}\nelse {\n  // I can pick the waypoint pointer\n  manifold::rndf::Waypoint *waypoint = node->Waypoint();\n}\n```\n\nI think this way, we join all the API points. Because from the graph, you get your desired vertex. And then you can get the reference to the object given the name of the vertex. For future discussion, I think that a common interface for grabbing the vertex metadata will be nice.", "markup": "markdown", "html": "<p>@caguero I think that it will be pretty handy to have a pointer to the Waypoint in the manifold::rndf::RoadNode class. For example, if I want to search for a waypoint I will do something like:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">strId</span> <span class=\"o\">=</span> <span class=\"s\">&quot;1.2.3&quot;</span><span class=\"p\">;</span>\n<span class=\"n\">manifold</span><span class=\"o\">::</span><span class=\"n\">RNDFNode</span> <span class=\"o\">*</span><span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">rndfInfo</span><span class=\"o\">-&gt;</span><span class=\"n\">Info</span><span class=\"p\">(</span><span class=\"n\">strId</span><span class=\"p\">);</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">node</span> <span class=\"o\">==</span> <span class=\"k\">nullptr</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// The waypoint does not exist.</span>\n<span class=\"p\">}</span>\n<span class=\"k\">else</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// I can pick the waypoint pointer</span>\n  <span class=\"n\">manifold</span><span class=\"o\">::</span><span class=\"n\">rndf</span><span class=\"o\">::</span><span class=\"n\">Waypoint</span> <span class=\"o\">*</span><span class=\"n\">waypoint</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"o\">-&gt;</span><span class=\"n\">Waypoint</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>I think this way, we join all the API points. Because from the graph, you get your desired vertex. And then you can get the reference to the object given the name of the vertex. For future discussion, I think that a common interface for grabbing the vertex metadata will be nice.</p>", "type": "rendered"}, "created_on": "2017-01-31T17:02:12.747409+00:00", "user": {"display_name": "Agustin Alba Chicar", "uuid": "{8bdb6c14-4455-4664-9346-942102361f75}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8bdb6c14-4455-4664-9346-942102361f75%7D"}, "html": {"href": "https://bitbucket.org/%7B8bdb6c14-4455-4664-9346-942102361f75%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53e8cbc5-23f1-4d62-aaaf-4a25ebc31c8f/07535b33-5cf2-4e10-bcd5-38bf6b994a6a/128"}}, "nickname": "agalbachicar", "type": "user", "account_id": "557058:53e8cbc5-23f1-4d62-aaaf-4a25ebc31c8f"}, "updated_on": null, "type": "issue_comment", "id": 34072118}